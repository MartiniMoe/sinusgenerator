[gd_scene load_steps=4 format=1]

[ext_resource path="res://sprites/dummy.tex" type="Texture" id=1]

[sub_resource type="CanvasItemShader" id=1]

_code = { "fragment":"uniform vec4 wavelen;\nuniform vec4 amp;\nuniform vec4 phase;\nuniform float width;\n\n//vec3 border_line=vec3(-1,-1,.85);\n\nvec2 border_p1=vec2(0.25,0);\nvec2 border_p2=vec2(0.75,.5);\n\n\nvec4 fg_col=vec4(1);\nvec4 bg_col=vec4(1,1,1,0);\n\nvec2 uv=UV;\nuv.y-=.5;\n\nfloat dis=1000000000.0;\n\nvec2 border_tang=border_p2-border_p1;\nvec2 border_nor=normalize(vec2(border_tang.y,-border_tang.x));\n\nvec3 border_line=vec3(border_nor,-dot(border_nor,border_p1));\n\ndis=abs(dot(border_line,vec3(uv,1)));\n\nvec2 wave_func(float t){\n\n\tfloat pi=3.14146;\n\n\tfloat wave=0;\n\tfloat wave_drv=0;\n\t\n\twave+=amp.x*cos(mod(t/wavelen.x*2*pi+phase.x,2*pi));\n\twave_drv+=amp.x/wavelen.x*2*pi*-sin(mod(t/wavelen.x*2*pi+phase.x,2*pi));\n\t\n\twave+=amp.y*cos(mod(t/wavelen.y*2*pi+phase.y,2*pi));\n\twave_drv+=amp.y/wavelen.y*2*pi*-sin(mod(t/wavelen.y*2*pi+phase.y,2*pi));\n\t\n\twave+=amp.z*cos(mod(t/wavelen.z*2*pi+phase.z,2*pi));\n\twave_drv+=amp.z/wavelen.z*2*pi*-sin(mod(t/wavelen.z*2*pi+phase.z,2*pi));\n\t\n\twave+=amp.w*cos(mod(t/wavelen.w*2*pi+phase.w,2*pi));\n\twave_drv+=amp.w/wavelen.w*2*pi*-sin(mod(t/wavelen.w*2*pi+phase.w,2*pi));\n\t\n\treturn vec2(wave,wave_drv);\n}\n\nfloat newton_iteration(float alpha,float x_1,float y_1,float delta_x,float delta_y){\n\tvec2 newton_eval=wave_func(x_1+alpha*delta_x);\n\tfloat val=newton_eval.x-y_1-alpha*delta_y;\n\tfloat drv_val=newton_eval.y*delta_x;\n\treturn alpha - val/drv_val;\n}\n\n//if(dot(border_line,vec3(uv,1))>0){\n{\n\tvec2 eval=wave_func(uv.x);\n\t\n\tdis=abs(uv.y-eval.x);\n\tdis/=length(vec2(1,eval.y));\n}\n\nfloat alpha=0.25;\n\nfloat x_1=border_p1.x;\nfloat y_1=border_p1.y;\n\nfloat delta_x=border_p2.x-border_p1.x;\nfloat delta_y=border_p2.y-border_p1.y;\n\nalpha=newton_iteration(alpha,x_1,y_1,delta_x,delta_y);\nalpha=newton_iteration(alpha,x_1,y_1,delta_x,delta_y);\nalpha=newton_iteration(alpha,x_1,y_1,delta_x,delta_y);\nalpha=newton_iteration(alpha,x_1,y_1,delta_x,delta_y);\nalpha=newton_iteration(alpha,x_1,y_1,delta_x,delta_y);\nalpha=newton_iteration(alpha,x_1,y_1,delta_x,delta_y);\nalpha=newton_iteration(alpha,x_1,y_1,delta_x,delta_y);\nalpha=newton_iteration(alpha,x_1,y_1,delta_x,delta_y);\nalpha=newton_iteration(alpha,x_1,y_1,delta_x,delta_y);\nalpha=newton_iteration(alpha,x_1,y_1,delta_x,delta_y);\n\nvec2 intersection_point=border_p1+alpha*(border_p2-border_p1);\n\n//dis=min(.1*length(intersection_point-uv),dis);\n\nvec4 col=mix(fg_col,bg_col,smoothstep(0,width,dis));\n\nCOLOR=col;", "fragment_ofs":0, "light":"", "light_ofs":0, "vertex":"", "vertex_ofs":0 }

[sub_resource type="CanvasItemMaterial" id=2]

shader/shader = SubResource( 1 )
shader/shading_mode = 0
shader_param/wavelen = Plane( 0, 0, 0, 0 )
shader_param/amp = Plane( 0, 0, 0, 0 )
shader_param/phase = Plane( 0, 0, 0, 0 )
shader_param/width = 0.0

[node name="Sprite" type="Sprite"]

material/material = SubResource( 2 )
texture = ExtResource( 1 )


